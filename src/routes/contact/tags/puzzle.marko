import { produce } from "immer"
import styles from "../contact-styles.module.css"

export interface Input {
  size: number;
}

static declare global {
  namespace Marko {
    namespace CSS {
      interface Properties {
        "--size"?: number;
      }
    }
  }
}

const/{ size }=input

let/grid=Array.from({length:size},()=>Array(size).fill(false)) as boolean[][]

roving-tabindex selector="button" direction="grid" columns=size loop
  div class=styles.grid style={ "--size": size }
    for|row, i| of=grid
      for|cell, j| of=row
        button
          ,onClick() {
            grid = produce(grid, (grid) => {
              for (let di = -1; di <= 1; di++) {
                for (let dj = -1; dj <= 1; dj++) {
                  if (di === 0 && dj === 0) continue;
                  
                  const ni = i + di;
                  const nj = j + dj;
                  if (ni >= 0 && ni < size && nj >= 0 && nj < size) {
                    grid[ni][nj] = !grid[ni][nj];
                  }
                }
              }
            })
          }
          ,aria-label=`${i} ${j}`
          ,aria-pressed=cell ? "true" : "false"

return=BigInt("0b" + grid.map(row => row.map(cell => cell ? '1' : '0').join('')).join(''))
